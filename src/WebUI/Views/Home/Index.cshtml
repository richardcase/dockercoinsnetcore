@{
    ViewData["Title"] = "Home Page";
}



<div class="row">
    <div class="col-md-12">
        <h2>
            Current mining speed:
            <span id="speed">-</span>
        </h2>
    </div>
</div>
<div class="row">
    <div class="col-md-12">
        <div id="graph"></div>
    </div>
</div>


@section scripts {
    <script type="text/javascript" src="~/js/jquery-1.11.3.min.js"></script>
    <script type="text/javascript" src="~/js/d3.min.js"></script>
    <script type="text/javascript" src="~/js/rickshaw.min.js"></script>
    
<script>

String.prototype.format = function () {
    var args = arguments;
    return this.replace(/\{(\d+)\}/g, function (m, n) { return args[n]; });
};

var series = [];
var points = []
var graph = null;
function refresh() {
    $.ajax({ url: "api/coins" }).done(function (data) {
        series.push(data);
        while (series.length < 250) {
            data = JSON.parse(JSON.stringify(data));
            data.now -= 1;
            series.unshift(data);
        }
        while (series.length > 250) {
            series.shift();
        }
        while (points.length > 0) {
            points.pop();
        }
        var speed;
        for (var i = 0; i < series.length - 1; i++) {
            // Compute instantaneous speed
            var s1 = series[i];
            var s2 = series[i + 1];
            speed = (s2.hashes - s1.hashes) / (s2.now - s1.now);
            points.push({ x: s2.now, y: speed });
        }
        $("#speed").text("~" + speed.toFixed(1) + " hashes/second");
        if (graph == null) {
            graph = new Rickshaw.Graph({
                renderer: "area",
                stroke: true,
                width: 800,
                height: 400,
                element: $("#graph")[0],
                preserve: true,
                series: [
                    {
                        name: "Coins",
                        color: "steelblue",
                        data: points
                    }
                ]
            });
            graph.render();
            var yAxis = new Rickshaw.Graph.Axis.Y({
                graph: graph,
                tickFormat: Rickshaw.Fixtures.Number.formatKMBT,
                ticksTreatment: "glow"
            });
            yAxis.render();
        } else {
            graph.update();
            $("text").css({
                "font-size": "15px",
                "font-weight": "normal",
                "opacity": 0.5,
            });
        }
    });
}

$(function () {
    setInterval(refresh, 1000);
});
</script>

}
